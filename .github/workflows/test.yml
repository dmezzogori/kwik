name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Install dependencies
      run: uv sync --all-groups
      
    - name: Start test database
      run: docker compose -f docker-compose.test.yml up -d
      
    - name: Wait for database to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        timeout 60s bash -c 'until docker compose -f docker-compose.test.yml exec postgres-test pg_isready -U postgres -d kwik_test; do sleep 2; done'
        
    - name: Run linting
      run: uv run ruff check .
      
    - name: Run formatting check
      run: uv run ruff format --check .
      
    - name: Run tests
      run: uv run pytest --cov=src/kwik --cov-report=xml --cov-report=term-missing -v
      env:
        # Test environment variables
        TEST_ENV: "True"
        POSTGRES_SERVER: "localhost"
        POSTGRES_PORT: "5433"
        POSTGRES_DB: "kwik_test"
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "root"
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Stop test database
      run: docker compose -f docker-compose.test.yml down
      if: always()
      
    - name: Clean up test database volumes
      run: docker compose -f docker-compose.test.yml down -v
      if: always()